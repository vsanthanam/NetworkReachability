{"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/gettingstarted","title":"Getting Started with NetworkReachability","type":"article"},{"children":[{"title":"UIKit Sample App","type":"groupMarker"},{"path":"\/tutorials\/networkreachability\/sampleprojectsetup-uikit","title":"UIKit Project Setup","type":"project"},{"path":"\/tutorials\/networkreachability\/sampleprojectui-uikit","title":"Storyboard Setup","type":"project"},{"path":"\/tutorials\/networkreachability\/sampleprojectintegration-uikit","title":"Implementing Reachability","type":"project"},{"title":"SwiftUI Sample App","type":"groupMarker"},{"path":"\/tutorials\/networkreachability\/sampleprojectsetup-swiftui","title":"SwiftUI Project Setup","type":"project"},{"path":"\/tutorials\/networkreachability\/sampleprojectintegration-swiftui","title":"Implementing Reachability","type":"project"},{"path":"\/tutorials\/networkreachability\/sampleprojectui-swiftui","title":"Canvas Setup","type":"project"}],"path":"\/tutorials\/tutorials","title":"Learn NetworkReachability","type":"overview"},{"title":"Network Monitor","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitorguide","title":"Network Monitor Programming Guide","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init()","title":"convenience init()","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(requiredinterfacetype:)","title":"convenience init(requiredInterfaceType: NWInterface.InterfaceType)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(prohibitedinterfacetypes:)","title":"convenience init(prohibitedInterfaceTypes: [NWInterface.InterfaceType])","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(updatehandler:)","title":"convenience init(updateHandler: NetworkMonitor.UpdateHandler)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(updatequeue:updatehandler:)","title":"convenience init(updateQueue: DispatchQueue, updateHandler: NetworkMonitor.UpdateHandler)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(requiredinterfacetype:updatehandler:)","title":"convenience init(requiredInterfaceType: NWInterface.InterfaceType, updateHandler: NetworkMonitor.UpdateHandler)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(requiredinterfacetype:updatequeue:updatehandler:)","title":"convenience init(requiredInterfaceType: NWInterface.InterfaceType, updateQueue: DispatchQueue, updateHandler: NetworkMonitor.UpdateHandler)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(prohibitedinterfacetypes:updatehandler:)","title":"convenience init(prohibitedInterfaceTypes: [NWInterface.InterfaceType], updateHandler: NetworkMonitor.UpdateHandler)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(prohibitedinterfacetypes:updatequeue:updatehandler:)","title":"convenience init(prohibitedInterfaceTypes: [NWInterface.InterfaceType], updateQueue: DispatchQueue, updateHandler: NetworkMonitor.UpdateHandler)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(delegate:)","title":"convenience init(delegate: any NetworkMonitor.Delegate)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(updatequeue:delegate:)","title":"convenience init(updateQueue: DispatchQueue, delegate: any NetworkMonitor.Delegate)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(requiredinterfacetype:delegate:)","title":"convenience init(requiredInterfaceType: NWInterface.InterfaceType, delegate: any NetworkMonitor.Delegate)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(requiredinterfacetype:updatequeue:delegate:)","title":"convenience init(requiredInterfaceType: NWInterface.InterfaceType, updateQueue: DispatchQueue, delegate: any NetworkMonitor.Delegate)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(prohibitedinterfacetypes:delegate:)","title":"convenience init(prohibitedInterfaceTypes: [NWInterface.InterfaceType], delegate: any NetworkMonitor.Delegate)","type":"init"},{"path":"\/documentation\/networkreachability\/networkmonitor\/init(prohibitedinterfacetypes:updatequeue:delegate:)","title":"convenience init(prohibitedInterfaceTypes: [NWInterface.InterfaceType], updateQueue: DispatchQueue, delegate: any NetworkMonitor.Delegate)","type":"init"},{"title":"Closure Callbacks","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/updatehandler-swift.property","title":"var updateHandler: NetworkMonitor.UpdateHandler?","type":"property"},{"path":"\/documentation\/networkreachability\/networkmonitor\/updatehandler-swift.typealias","title":"NetworkMonitor.UpdateHandler","type":"typealias"},{"path":"\/documentation\/networkreachability\/networkmonitor\/networkpath(dispatchqueue:completionhandler:)","title":"static func networkPath(dispatchQueue: DispatchQueue?, completionHandler: (NWPath) -> Void)","type":"method"},{"title":"Swift Concurrency","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/networkpath","title":"static var networkPath: NWPath","type":"property"},{"path":"\/documentation\/networkreachability\/networkmonitor\/networkpathupdates","title":"static var networkPathUpdates: AsyncStream<NWPath>","type":"property"},{"path":"\/documentation\/networkreachability\/networkmonitor\/networkpathupdates(requiringinterfacetype:)","title":"static func networkPathUpdates(requiringInterfaceType: NWInterface.InterfaceType) -> AsyncStream<NWPath>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/networkpathupdates(prohibitinginterfacetypes:)","title":"static func networkPathUpdates(prohibitingInterfaceTypes: [NWInterface.InterfaceType]) -> AsyncStream<NWPath>","type":"method"},{"title":"Delegation","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/delegate-swift.typealias","title":"NetworkMonitor.Delegate","type":"typealias"},{"path":"\/documentation\/networkreachability\/networkmonitor\/delegate-swift.property","title":"var delegate: (any NetworkMonitor.Delegate)?","type":"property"},{"title":"NotificationCenter","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/networkpathchangednotificationname","title":"static let networkPathChangedNotificationName: Notification.Name","type":"property"},{"title":"Combine","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/networkpathpublisher","title":"static var networkPathPublisher: Publishers.NetworkPathPublisher","type":"property"},{"path":"\/documentation\/networkreachability\/networkmonitor\/networkpathpublisher(requiringinterfacetype:)","title":"static func networkPathPublisher(requiringInterfaceType: NWInterface.InterfaceType) -> Publishers.NetworkPathPublisher","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/networkpathpublisher(prohibitinginterfacetypes:)","title":"static func networkPathPublisher(prohibitingInterfaceTypes: [NWInterface.InterfaceType]) -> Publishers.NetworkPathPublisher","type":"method"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/receive(subscriber:)","title":"func receive<S>(subscriber: S)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/failure","title":"NetworkMonitor.Publisher.Failure","type":"typealias"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/output","title":"NetworkMonitor.Publisher.Output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/values","title":"var values: AsyncPublisher<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/allsatisfy(_:)","title":"func allSatisfy((Self.Output) -> Bool) -> Publishers.AllSatisfy<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/append(_:)","title":"func append(Self.Output...) -> Publishers.Concatenate<Self, Publishers.Sequence<[Self.Output], Self.Failure>>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/assertnofailure(_:file:line:)","title":"func assertNoFailure(String, file: StaticString, line: UInt) -> Publishers.AssertNoFailure<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/assign(to:)","title":"func assign(to: inout Published<Self.Output>.Publisher)","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/assign(to:on:)","title":"func assign<Root>(to: ReferenceWritableKeyPath<Root, Self.Output>, on: Root) -> AnyCancellable","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/breakpoint(receivesubscription:receiveoutput:receivecompletion:)","title":"func breakpoint(receiveSubscription: ((any Subscription) -> Bool)?, receiveOutput: ((Self.Output) -> Bool)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Bool)?) -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/breakpointonerror()","title":"func breakpointOnError() -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/buffer(size:prefetch:whenfull:)","title":"func buffer(size: Int, prefetch: Publishers.PrefetchStrategy, whenFull: Publishers.BufferingStrategy<Self.Failure>) -> Publishers.Buffer<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/catch(_:)","title":"func `catch`<P>((Self.Failure) -> P) -> Publishers.Catch<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/collect()","title":"func collect() -> Publishers.Collect<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/collect(_:)","title":"func collect(Int) -> Publishers.CollectByCount<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/collect(_:options:)","title":"func collect<S>(Publishers.TimeGroupingStrategy<S>, options: S.SchedulerOptions?) -> Publishers.CollectByTime<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/combinelatest(_:)","title":"func combineLatest<P>(P) -> Publishers.CombineLatest<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/combinelatest(_:_:)-2hdcs","title":"func combineLatest<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.CombineLatest<Self, P>, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/combinelatest(_:_:)-2rhhp","title":"func combineLatest<P, Q>(P, Q) -> Publishers.CombineLatest3<Self, P, Q>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/combinelatest(_:_:_:)-1k950","title":"func combineLatest<P, Q, R>(P, Q, R) -> Publishers.CombineLatest4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/combinelatest(_:_:_:)-9bh3w","title":"func combineLatest<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.CombineLatest3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/combinelatest(_:_:_:_:)","title":"func combineLatest<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.CombineLatest4<Self, P, Q, R>, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/compactmap(_:)","title":"func compactMap<T>((Self.Output) -> T?) -> Publishers.CompactMap<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/contains(_:)","title":"func contains(Self.Output) -> Publishers.Contains<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/contains(where:)","title":"func contains(where: (Self.Output) -> Bool) -> Publishers.ContainsWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/count()","title":"func count() -> Publishers.Count<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/debounce(for:scheduler:options:)","title":"func debounce<S>(for: S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Debounce<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/decode(type:decoder:)","title":"func decode<Item, Coder>(type: Item.Type, decoder: Coder) -> Publishers.Decode<Self, Item, Coder>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/delay(for:tolerance:scheduler:options:)","title":"func delay<S>(for: S.SchedulerTimeType.Stride, tolerance: S.SchedulerTimeType.Stride?, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Delay<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/drop(untiloutputfrom:)","title":"func drop<P>(untilOutputFrom: P) -> Publishers.DropUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/drop(while:)","title":"func drop(while: (Self.Output) -> Bool) -> Publishers.DropWhile<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/dropfirst(_:)","title":"func dropFirst(Int) -> Publishers.Drop<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/erasetoanypublisher()","title":"func eraseToAnyPublisher() -> AnyPublisher<Self.Output, Self.Failure>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Publishers.Filter<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/first()","title":"func first() -> Publishers.First<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/first(where:)","title":"func first(where: (Self.Output) -> Bool) -> Publishers.FirstWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/flatmap(maxpublishers:_:)-1wwap","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Publishers.SetFailureType<Self, P.Failure>>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/flatmap(maxpublishers:_:)-22bki","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<Publishers.SetFailureType<P, Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/flatmap(maxpublishers:_:)-5j0td","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/flatmap(maxpublishers:_:)-9w2i4","title":"func flatMap<T, P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/handleevents(receivesubscription:receiveoutput:receivecompletion:receivecancel:receiverequest:)","title":"func handleEvents(receiveSubscription: ((any Subscription) -> Void)?, receiveOutput: ((Self.Output) -> Void)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void)?, receiveCancel: (() -> Void)?, receiveRequest: ((Subscribers.Demand) -> Void)?) -> Publishers.HandleEvents<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/ignoreoutput()","title":"func ignoreOutput() -> Publishers.IgnoreOutput<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/last()","title":"func last() -> Publishers.Last<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/last(where:)","title":"func last(where: (Self.Output) -> Bool) -> Publishers.LastWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/makeconnectable()","title":"func makeConnectable() -> Publishers.MakeConnectable<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/map(_:)-8jtcm","title":"func map<T>(KeyPath<Self.Output, T>) -> Publishers.MapKeyPath<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/map(_:)-nnmo","title":"func map<T>((Self.Output) -> T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/map(_:_:)","title":"func map<T0, T1>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>) -> Publishers.MapKeyPath2<Self, T0, T1>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/map(_:_:_:)","title":"func map<T0, T1, T2>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>, KeyPath<Self.Output, T2>) -> Publishers.MapKeyPath3<Self, T0, T1, T2>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/maperror(_:)","title":"func mapError<E>((Self.Failure) -> E) -> Publishers.MapError<Self, E>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/max(by:)","title":"func max(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/measureinterval(using:options:)","title":"func measureInterval<S>(using: S, options: S.SchedulerOptions?) -> Publishers.MeasureInterval<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/merge(with:)","title":"func merge(with: Self) -> Publishers.MergeMany<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/merge(with:_:)","title":"func merge<B, C>(with: B, C) -> Publishers.Merge3<Self, B, C>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/merge(with:_:_:)","title":"func merge<B, C, D>(with: B, C, D) -> Publishers.Merge4<Self, B, C, D>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/merge(with:_:_:_:)","title":"func merge<B, C, D, E>(with: B, C, D, E) -> Publishers.Merge5<Self, B, C, D, E>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/merge(with:_:_:_:_:)","title":"func merge<B, C, D, E, F>(with: B, C, D, E, F) -> Publishers.Merge6<Self, B, C, D, E, F>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/merge(with:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G>(with: B, C, D, E, F, G) -> Publishers.Merge7<Self, B, C, D, E, F, G>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/merge(with:_:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G, H>(with: B, C, D, E, F, G, H) -> Publishers.Merge8<Self, B, C, D, E, F, G, H>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/min(by:)","title":"func min(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/multicast(_:)","title":"func multicast<S>(() -> S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/multicast(subject:)","title":"func multicast<S>(subject: S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/output(at:)","title":"func output(at: Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/output(in:)","title":"func output<R>(in: R) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/prefix(_:)","title":"func prefix(Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/prefix(untiloutputfrom:)","title":"func prefix<P>(untilOutputFrom: P) -> Publishers.PrefixUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/prefix(while:)","title":"func prefix(while: (Self.Output) -> Bool) -> Publishers.PrefixWhile<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/prepend(_:)","title":"func prepend(Self.Output...) -> Publishers.Concatenate<Publishers.Sequence<[Self.Output], Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/print(_:to:)","title":"func print(String, to: (any TextOutputStream)?) -> Publishers.Print<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/receive(on:options:)","title":"func receive<S>(on: S, options: S.SchedulerOptions?) -> Publishers.ReceiveOn<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/reduce(_:_:)","title":"func reduce<T>(T, (T, Self.Output) -> T) -> Publishers.Reduce<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/removeduplicates()","title":"func removeDuplicates() -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Output, Self.Output) -> Bool) -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/replaceempty(with:)","title":"func replaceEmpty(with: Self.Output) -> Publishers.ReplaceEmpty<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Publishers.ReplaceError<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/replacenil(with:)","title":"func replaceNil<T>(with: T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/retry(_:)","title":"func retry(Int) -> Publishers.Retry<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/scan(_:_:)","title":"func scan<T>(T, (T, Self.Output) -> T) -> Publishers.Scan<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/setfailuretype(to:)","title":"func setFailureType<E>(to: E.Type) -> Publishers.SetFailureType<Self, E>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/share()","title":"func share() -> Publishers.Share<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/sink(receivecompletion:receivevalue:)","title":"func sink(receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void), receiveValue: ((Self.Output) -> Void)) -> AnyCancellable","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/sink(receivevalue:)","title":"func sink(receiveValue: ((Self.Output) -> Void)) -> AnyCancellable","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/subscribe(_:)-38vir","title":"func subscribe<S>(S)","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/subscribe(_:)-6wtzk","title":"func subscribe<S>(S) -> AnyCancellable","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/subscribe(on:options:)","title":"func subscribe<S>(on: S, options: S.SchedulerOptions?) -> Publishers.SubscribeOn<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/throttle(for:scheduler:latest:)","title":"func throttle<S>(for: S.SchedulerTimeType.Stride, scheduler: S, latest: Bool) -> Publishers.Throttle<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/timeout(_:scheduler:options:customerror:)","title":"func timeout<S>(S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?, customError: (() -> Self.Failure)?) -> Publishers.Timeout<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/tryallsatisfy(_:)","title":"func tryAllSatisfy((Self.Output) throws -> Bool) -> Publishers.TryAllSatisfy<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/trycatch(_:)","title":"func tryCatch<P>((Self.Failure) throws -> P) -> Publishers.TryCatch<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/trycompactmap(_:)","title":"func tryCompactMap<T>((Self.Output) throws -> T?) -> Publishers.TryCompactMap<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/trycontains(where:)","title":"func tryContains(where: (Self.Output) throws -> Bool) -> Publishers.TryContainsWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/trydrop(while:)","title":"func tryDrop(while: (Self.Output) throws -> Bool) -> Publishers.TryDropWhile<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/tryfilter(_:)","title":"func tryFilter((Self.Output) throws -> Bool) -> Publishers.TryFilter<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/tryfirst(where:)","title":"func tryFirst(where: (Self.Output) throws -> Bool) -> Publishers.TryFirstWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/trylast(where:)","title":"func tryLast(where: (Self.Output) throws -> Bool) -> Publishers.TryLastWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/trymap(_:)","title":"func tryMap<T>((Self.Output) throws -> T) -> Publishers.TryMap<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/trymax(by:)","title":"func tryMax(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/trymin(by:)","title":"func tryMin(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/tryprefix(while:)","title":"func tryPrefix(while: (Self.Output) throws -> Bool) -> Publishers.TryPrefixWhile<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/tryreduce(_:_:)","title":"func tryReduce<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryReduce<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/tryremoveduplicates(by:)","title":"func tryRemoveDuplicates(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryRemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/tryscan(_:_:)","title":"func tryScan<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryScan<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/zip(_:)","title":"func zip<P>(P) -> Publishers.Zip<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/zip(_:_:)-2rd7","title":"func zip<P, Q>(P, Q) -> Publishers.Zip3<Self, P, Q>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/zip(_:_:)-5lvn0","title":"func zip<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.Zip<Self, P>, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/zip(_:_:_:)-6412w","title":"func zip<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.Zip3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/zip(_:_:_:)-7k6tf","title":"func zip<P, Q, R>(P, Q, R) -> Publishers.Zip4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/zip(_:_:_:_:)","title":"func zip<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.Zip4<Self, P, Q, R>, T>","type":"method"}],"path":"\/documentation\/networkreachability\/networkmonitor\/publisher\/publisher-implementations","title":"Publisher Implementations","type":"symbol"}],"path":"\/documentation\/networkreachability\/networkmonitor\/publisher","title":"NetworkMonitor.Publisher","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitor\/currentpath","title":"var currentPath: NWPath","type":"property"},{"path":"\/documentation\/networkreachability\/networkmonitor\/updatequeue","title":"var updateQueue: DispatchQueue?","type":"property"}],"path":"\/documentation\/networkreachability\/networkmonitor","title":"NetworkMonitor","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/networkmonitordelegate\/networkmonitor(_:didupdatenetworkpath:)","title":"func networkMonitor(NetworkMonitor, didUpdateNetworkPath: NWPath)","type":"method"}],"path":"\/documentation\/networkreachability\/networkmonitordelegate","title":"NetworkMonitorDelegate","type":"protocol"},{"title":"Reachability Monitor","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitorguide","title":"Reachability Monitor Programming Guide","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init()","title":"convenience init() throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(host:)","title":"convenience init(host: String) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(address:)","title":"convenience init(address: sockaddr) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(updatehandler:)","title":"convenience init(updateHandler: ReachabilityMonitor.UpdateHandler) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(updatequeue:updatehandler:)","title":"convenience init(updateQueue: DispatchQueue, updateHandler: ReachabilityMonitor.UpdateHandler) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(host:updatehandler:)","title":"convenience init(host: String, updateHandler: ReachabilityMonitor.UpdateHandler) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(host:updatequeue:updatehandler:)","title":"convenience init(host: String, updateQueue: DispatchQueue, updateHandler: ReachabilityMonitor.UpdateHandler) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(address:updatehandler:)","title":"convenience init(address: sockaddr, updateHandler: ReachabilityMonitor.UpdateHandler) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(address:updatequeue:updatehandler:)","title":"convenience init(address: sockaddr, updateQueue: DispatchQueue, updateHandler: ReachabilityMonitor.UpdateHandler) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(delegate:)","title":"convenience init(delegate: any ReachabilityMonitor.Delegate) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(updatequeue:delegate:)","title":"convenience init(updateQueue: DispatchQueue, delegate: any ReachabilityMonitor.Delegate) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(host:delegate:)","title":"convenience init(host: String, delegate: any ReachabilityMonitor.Delegate) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(host:updatequeue:delegate:)","title":"convenience init(host: String, updateQueue: DispatchQueue, delegate: any ReachabilityMonitor.Delegate) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(address:delegate:)","title":"convenience init(address: sockaddr, delegate: any ReachabilityMonitor.Delegate) throws","type":"init"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/init(address:updatequeue:delegate:)","title":"convenience init(address: sockaddr, updateQueue: DispatchQueue, delegate: any ReachabilityMonitor.Delegate) throws","type":"init"},{"title":"Closure Callbacks","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/updatehandler-swift.property","title":"var updateHandler: ReachabilityMonitor.UpdateHandler?","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/updatehandler-swift.typealias","title":"ReachabilityMonitor.UpdateHandler","type":"typealias"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/result","title":"ReachabilityMonitor.Result","type":"typealias"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/failedtocreate(_:)","title":"case failedToCreate(Int32)","type":"case"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/failedtogetflags(_:)","title":"case failedToGetFlags(Int32)","type":"case"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/failedtosetdispatchqueue(_:)","title":"case failedToSetDispatchQueue(Int32)","type":"case"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/failedtostartcallback(_:)","title":"case failedToStartCallback(Int32)","type":"case"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/unknown","title":"case unknown","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/code","title":"var code: Int32","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/networkreachability\/reachabilitymonitor\/error","title":"ReachabilityMonitor.Error","type":"enum"},{"title":"Swift Concurrency","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachability","title":"static var reachability: Reachability","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachabilityupdates","title":"static var reachabilityUpdates: AsyncThrowingStream<Reachability, any Error>","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachabilityupdates(forhost:)","title":"static func reachabilityUpdates(forHost: String) -> AsyncThrowingStream<Reachability, any Error>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachabilityupdates(foraddress:)","title":"static func reachabilityUpdates(forAddress: sockaddr) -> AsyncThrowingStream<Reachability, any Error>","type":"method"},{"title":"Delegation","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/delegate-swift.typealias","title":"ReachabilityMonitor.Delegate","type":"typealias"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/delegate-swift.property","title":"var delegate: (any ReachabilityMonitor.Delegate)?","type":"property"},{"title":"Notifications","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachabilitychangednotificationname","title":"static let reachabilityChangedNotificationName: Notification.Name","type":"property"},{"title":"Combine","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachabilitypublisher","title":"static var reachabilityPublisher: Publishers.ReachabilityPublisher","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachabilitypublisher(forhost:)","title":"static func reachabilityPublisher(forHost: String) -> Publishers.ReachabilityPublisher","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachabilitypublisher(foraddress:)","title":"static func reachabilityPublisher(forAddress: sockaddr) -> Publishers.ReachabilityPublisher","type":"method"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/receive(subscriber:)","title":"func receive<S>(subscriber: S)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/failure","title":"ReachabilityMonitor.Publisher.Failure","type":"typealias"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/output","title":"ReachabilityMonitor.Publisher.Output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/values","title":"var values: AsyncThrowingPublisher<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/allsatisfy(_:)","title":"func allSatisfy((Self.Output) -> Bool) -> Publishers.AllSatisfy<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/append(_:)","title":"func append(Self.Output...) -> Publishers.Concatenate<Self, Publishers.Sequence<[Self.Output], Self.Failure>>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/assertnofailure(_:file:line:)","title":"func assertNoFailure(String, file: StaticString, line: UInt) -> Publishers.AssertNoFailure<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/breakpoint(receivesubscription:receiveoutput:receivecompletion:)","title":"func breakpoint(receiveSubscription: ((any Subscription) -> Bool)?, receiveOutput: ((Self.Output) -> Bool)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Bool)?) -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/breakpointonerror()","title":"func breakpointOnError() -> Publishers.Breakpoint<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/buffer(size:prefetch:whenfull:)","title":"func buffer(size: Int, prefetch: Publishers.PrefetchStrategy, whenFull: Publishers.BufferingStrategy<Self.Failure>) -> Publishers.Buffer<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/catch(_:)","title":"func `catch`<P>((Self.Failure) -> P) -> Publishers.Catch<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/collect()","title":"func collect() -> Publishers.Collect<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/collect(_:)","title":"func collect(Int) -> Publishers.CollectByCount<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/collect(_:options:)","title":"func collect<S>(Publishers.TimeGroupingStrategy<S>, options: S.SchedulerOptions?) -> Publishers.CollectByTime<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/combinelatest(_:)","title":"func combineLatest<P>(P) -> Publishers.CombineLatest<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/combinelatest(_:_:)-2rbpi","title":"func combineLatest<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.CombineLatest<Self, P>, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/combinelatest(_:_:)-7yvck","title":"func combineLatest<P, Q>(P, Q) -> Publishers.CombineLatest3<Self, P, Q>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/combinelatest(_:_:_:)-38g1f","title":"func combineLatest<P, Q, R>(P, Q, R) -> Publishers.CombineLatest4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/combinelatest(_:_:_:)-8ifm6","title":"func combineLatest<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.CombineLatest3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/combinelatest(_:_:_:_:)","title":"func combineLatest<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.CombineLatest4<Self, P, Q, R>, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/compactmap(_:)","title":"func compactMap<T>((Self.Output) -> T?) -> Publishers.CompactMap<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/contains(_:)","title":"func contains(Self.Output) -> Publishers.Contains<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/contains(where:)","title":"func contains(where: (Self.Output) -> Bool) -> Publishers.ContainsWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/count()","title":"func count() -> Publishers.Count<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/debounce(for:scheduler:options:)","title":"func debounce<S>(for: S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Debounce<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/decode(type:decoder:)","title":"func decode<Item, Coder>(type: Item.Type, decoder: Coder) -> Publishers.Decode<Self, Item, Coder>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/delay(for:tolerance:scheduler:options:)","title":"func delay<S>(for: S.SchedulerTimeType.Stride, tolerance: S.SchedulerTimeType.Stride?, scheduler: S, options: S.SchedulerOptions?) -> Publishers.Delay<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/drop(untiloutputfrom:)","title":"func drop<P>(untilOutputFrom: P) -> Publishers.DropUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/drop(while:)","title":"func drop(while: (Self.Output) -> Bool) -> Publishers.DropWhile<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/dropfirst(_:)","title":"func dropFirst(Int) -> Publishers.Drop<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/erasetoanypublisher()","title":"func eraseToAnyPublisher() -> AnyPublisher<Self.Output, Self.Failure>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/filter(_:)","title":"func filter((Self.Output) -> Bool) -> Publishers.Filter<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/first()","title":"func first() -> Publishers.First<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/first(where:)","title":"func first(where: (Self.Output) -> Bool) -> Publishers.FirstWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/flatmap(maxpublishers:_:)-7m3ud","title":"func flatMap<P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<Publishers.SetFailureType<P, Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/flatmap(maxpublishers:_:)-x4fn","title":"func flatMap<T, P>(maxPublishers: Subscribers.Demand, (Self.Output) -> P) -> Publishers.FlatMap<P, Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/handleevents(receivesubscription:receiveoutput:receivecompletion:receivecancel:receiverequest:)","title":"func handleEvents(receiveSubscription: ((any Subscription) -> Void)?, receiveOutput: ((Self.Output) -> Void)?, receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void)?, receiveCancel: (() -> Void)?, receiveRequest: ((Subscribers.Demand) -> Void)?) -> Publishers.HandleEvents<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/ignoreoutput()","title":"func ignoreOutput() -> Publishers.IgnoreOutput<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/last()","title":"func last() -> Publishers.Last<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/last(where:)","title":"func last(where: (Self.Output) -> Bool) -> Publishers.LastWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/map(_:)-4w3b3","title":"func map<T>(KeyPath<Self.Output, T>) -> Publishers.MapKeyPath<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/map(_:)-8n79b","title":"func map<T>((Self.Output) -> T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/map(_:_:)","title":"func map<T0, T1>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>) -> Publishers.MapKeyPath2<Self, T0, T1>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/map(_:_:_:)","title":"func map<T0, T1, T2>(KeyPath<Self.Output, T0>, KeyPath<Self.Output, T1>, KeyPath<Self.Output, T2>) -> Publishers.MapKeyPath3<Self, T0, T1, T2>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/maperror(_:)","title":"func mapError<E>((Self.Failure) -> E) -> Publishers.MapError<Self, E>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/max(by:)","title":"func max(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/measureinterval(using:options:)","title":"func measureInterval<S>(using: S, options: S.SchedulerOptions?) -> Publishers.MeasureInterval<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/merge(with:)","title":"func merge(with: Self) -> Publishers.MergeMany<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/merge(with:_:)","title":"func merge<B, C>(with: B, C) -> Publishers.Merge3<Self, B, C>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/merge(with:_:_:)","title":"func merge<B, C, D>(with: B, C, D) -> Publishers.Merge4<Self, B, C, D>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/merge(with:_:_:_:)","title":"func merge<B, C, D, E>(with: B, C, D, E) -> Publishers.Merge5<Self, B, C, D, E>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/merge(with:_:_:_:_:)","title":"func merge<B, C, D, E, F>(with: B, C, D, E, F) -> Publishers.Merge6<Self, B, C, D, E, F>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/merge(with:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G>(with: B, C, D, E, F, G) -> Publishers.Merge7<Self, B, C, D, E, F, G>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/merge(with:_:_:_:_:_:_:)","title":"func merge<B, C, D, E, F, G, H>(with: B, C, D, E, F, G, H) -> Publishers.Merge8<Self, B, C, D, E, F, G, H>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/min(by:)","title":"func min(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/multicast(_:)","title":"func multicast<S>(() -> S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/multicast(subject:)","title":"func multicast<S>(subject: S) -> Publishers.Multicast<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/output(at:)","title":"func output(at: Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/output(in:)","title":"func output<R>(in: R) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/prefix(_:)","title":"func prefix(Int) -> Publishers.Output<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/prefix(untiloutputfrom:)","title":"func prefix<P>(untilOutputFrom: P) -> Publishers.PrefixUntilOutput<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/prefix(while:)","title":"func prefix(while: (Self.Output) -> Bool) -> Publishers.PrefixWhile<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/prepend(_:)","title":"func prepend(Self.Output...) -> Publishers.Concatenate<Publishers.Sequence<[Self.Output], Self.Failure>, Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/print(_:to:)","title":"func print(String, to: (any TextOutputStream)?) -> Publishers.Print<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/receive(on:options:)","title":"func receive<S>(on: S, options: S.SchedulerOptions?) -> Publishers.ReceiveOn<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/reduce(_:_:)","title":"func reduce<T>(T, (T, Self.Output) -> T) -> Publishers.Reduce<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/removeduplicates()","title":"func removeDuplicates() -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Output, Self.Output) -> Bool) -> Publishers.RemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/replaceempty(with:)","title":"func replaceEmpty(with: Self.Output) -> Publishers.ReplaceEmpty<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/replaceerror(with:)","title":"func replaceError(with: Self.Output) -> Publishers.ReplaceError<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/replacenil(with:)","title":"func replaceNil<T>(with: T) -> Publishers.Map<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/retry(_:)","title":"func retry(Int) -> Publishers.Retry<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/scan(_:_:)","title":"func scan<T>(T, (T, Self.Output) -> T) -> Publishers.Scan<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/share()","title":"func share() -> Publishers.Share<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/sink(receivecompletion:receivevalue:)","title":"func sink(receiveCompletion: ((Subscribers.Completion<Self.Failure>) -> Void), receiveValue: ((Self.Output) -> Void)) -> AnyCancellable","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/subscribe(_:)-5zrld","title":"func subscribe<S>(S)","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/subscribe(_:)-76se2","title":"func subscribe<S>(S) -> AnyCancellable","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/subscribe(on:options:)","title":"func subscribe<S>(on: S, options: S.SchedulerOptions?) -> Publishers.SubscribeOn<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/throttle(for:scheduler:latest:)","title":"func throttle<S>(for: S.SchedulerTimeType.Stride, scheduler: S, latest: Bool) -> Publishers.Throttle<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/timeout(_:scheduler:options:customerror:)","title":"func timeout<S>(S.SchedulerTimeType.Stride, scheduler: S, options: S.SchedulerOptions?, customError: (() -> Self.Failure)?) -> Publishers.Timeout<Self, S>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/tryallsatisfy(_:)","title":"func tryAllSatisfy((Self.Output) throws -> Bool) -> Publishers.TryAllSatisfy<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/trycatch(_:)","title":"func tryCatch<P>((Self.Failure) throws -> P) -> Publishers.TryCatch<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/trycompactmap(_:)","title":"func tryCompactMap<T>((Self.Output) throws -> T?) -> Publishers.TryCompactMap<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/trycontains(where:)","title":"func tryContains(where: (Self.Output) throws -> Bool) -> Publishers.TryContainsWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/trydrop(while:)","title":"func tryDrop(while: (Self.Output) throws -> Bool) -> Publishers.TryDropWhile<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/tryfilter(_:)","title":"func tryFilter((Self.Output) throws -> Bool) -> Publishers.TryFilter<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/tryfirst(where:)","title":"func tryFirst(where: (Self.Output) throws -> Bool) -> Publishers.TryFirstWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/trylast(where:)","title":"func tryLast(where: (Self.Output) throws -> Bool) -> Publishers.TryLastWhere<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/trymap(_:)","title":"func tryMap<T>((Self.Output) throws -> T) -> Publishers.TryMap<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/trymax(by:)","title":"func tryMax(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/trymin(by:)","title":"func tryMin(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/tryprefix(while:)","title":"func tryPrefix(while: (Self.Output) throws -> Bool) -> Publishers.TryPrefixWhile<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/tryreduce(_:_:)","title":"func tryReduce<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryReduce<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/tryremoveduplicates(by:)","title":"func tryRemoveDuplicates(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryRemoveDuplicates<Self>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/tryscan(_:_:)","title":"func tryScan<T>(T, (T, Self.Output) throws -> T) -> Publishers.TryScan<Self, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/zip(_:)","title":"func zip<P>(P) -> Publishers.Zip<Self, P>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/zip(_:_:)-9msf2","title":"func zip<P, Q>(P, Q) -> Publishers.Zip3<Self, P, Q>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/zip(_:_:)-ehlh","title":"func zip<P, T>(P, (Self.Output, P.Output) -> T) -> Publishers.Map<Publishers.Zip<Self, P>, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/zip(_:_:_:)-3j9kn","title":"func zip<P, Q, T>(P, Q, (Self.Output, P.Output, Q.Output) -> T) -> Publishers.Map<Publishers.Zip3<Self, P, Q>, T>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/zip(_:_:_:)-4nv5g","title":"func zip<P, Q, R>(P, Q, R) -> Publishers.Zip4<Self, P, Q, R>","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/zip(_:_:_:_:)","title":"func zip<P, Q, R, T>(P, Q, R, (Self.Output, P.Output, Q.Output, R.Output) -> T) -> Publishers.Map<Publishers.Zip4<Self, P, Q, R>, T>","type":"method"}],"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher\/publisher-implementations","title":"Publisher Implementations","type":"symbol"}],"path":"\/documentation\/networkreachability\/reachabilitymonitor\/publisher","title":"ReachabilityMonitor.Publisher","type":"struct"},{"title":"Synchronous","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/currentreachability","title":"var currentReachability: Reachability","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachability","title":"static var reachability: Reachability","type":"property"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachability(forhost:)","title":"static func reachability(forHost: String) throws -> Reachability","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/reachability(foraddress:)","title":"static func reachability(forAddress: sockaddr) throws -> Reachability","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitor\/updatequeue","title":"var updateQueue: DispatchQueue?","type":"property"}],"path":"\/documentation\/networkreachability\/reachabilitymonitor","title":"ReachabilityMonitor","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachabilitymonitordelegate\/reachabilitymonitor(_:didfailwitherror:)","title":"func reachabilityMonitor(ReachabilityMonitor, didFailWithError: any Error)","type":"method"},{"path":"\/documentation\/networkreachability\/reachabilitymonitordelegate\/reachabilitymonitor(_:didupdatereachability:)","title":"func reachabilityMonitor(ReachabilityMonitor, didUpdateReachability: Reachability)","type":"method"}],"path":"\/documentation\/networkreachability\/reachabilitymonitordelegate","title":"ReachabilityMonitorDelegate","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachability\/==(_:_:)","title":"static func == (Reachability, Reachability) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachability\/init(flags:)","title":"init(flags: SCNetworkReachabilityFlags?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachability\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/networkreachability\/reachability\/flags","title":"let flags: SCNetworkReachabilityFlags?","type":"property"},{"path":"\/documentation\/networkreachability\/reachability\/status-swift.property","title":"var status: Reachability.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachability\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachability\/unknown","title":"static let unknown: Reachability","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachability\/status-swift.enum\/unavailable","title":"case unavailable","type":"case"},{"path":"\/documentation\/networkreachability\/reachability\/status-swift.enum\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/networkreachability\/reachability\/status-swift.enum\/wlan","title":"case wlan","type":"case"},{"path":"\/documentation\/networkreachability\/reachability\/status-swift.enum\/wwan","title":"case wwan","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachability\/status-swift.enum\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/networkreachability\/reachability\/status-swift.enum\/isreachable","title":"var isReachable: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachability\/status-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networkreachability\/reachability\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/networkreachability\/reachability\/status-swift.enum","title":"Reachability.Status","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/reachability\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networkreachability\/reachability\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/networkreachability\/reachability","title":"Reachability","type":"struct"},{"title":"Other","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/rxswift","title":"NetworkReachability with RxSwift","type":"article"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/combine\/publishers\/networkpathpublisher","title":"Publishers.NetworkPathPublisher","type":"typealias"},{"path":"\/documentation\/networkreachability\/combine\/publishers\/reachabilitypublisher","title":"Publishers.ReachabilityPublisher","type":"typealias"}],"path":"\/documentation\/networkreachability\/combine\/publishers","title":"Publishers","type":"extension"}],"path":"\/documentation\/networkreachability\/combine","title":"Combine","type":"extension"},{"children":[{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networkreachability\/foundation\/nsnotification\/name\/networkpathchanged","title":"static let networkPathChanged: Notification.Name","type":"property"},{"path":"\/documentation\/networkreachability\/foundation\/nsnotification\/name\/reachabilitychanged","title":"static let reachabilityChanged: Notification.Name","type":"property"}],"path":"\/documentation\/networkreachability\/foundation\/nsnotification\/name","title":"NSNotification.Name","type":"extension"}],"path":"\/documentation\/networkreachability\/foundation\/nsnotification","title":"NSNotification","type":"extension"}],"path":"\/documentation\/networkreachability\/foundation","title":"Foundation","type":"extension"}],"path":"\/documentation\/networkreachability","title":"NetworkReachability","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}