{"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reachability is a replacement for Apple’s "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/systemconfiguration"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/systemconfiguration\/scnetworkreachability?language=swift"},{"type":"text","text":". These APIs were originally written in C and are old, cumbersome to use, and do not play nicely with many modern Swift language patterns. Reachability wraps these APIs in Swift and provides a modern interface for the most common use cases."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reachability supports with the following Apple platform releases:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 13.0 - 15.x"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"macOS 10.15 - 13.x"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"tvOS 13.0 - 15.x"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"watchOS 13.0 - 15.x"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reachability supports synchronous reachability queries, as well as constant asynchronous reachability observation via the following mechanisms:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Delegation"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Closures"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/notificationcenter"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/combine"}]}]}]},{"anchor":"Installation","level":2,"type":"heading","text":"Installation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reachability is currently distributed exclusively through the "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.swift.org\/package-manager\/"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add Reachability as a dependency to an existing Swift package, add the following line of code to the "},{"type":"codeVoice","code":"packages"},{"type":"text","text":" parameter of your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":" file:"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","    .package(url: \"https:\/\/github.com\/vsanthanam\/Reachability.git\", .upToNextMajor(from: \"1.0.0\"))","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To add Reachability as a dependency to an Xcode Project:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Choose File -> Swift Packages -> Add Package Dependency…"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Enter package URL "},{"type":"codeVoice","code":"https:\/\/github.com\/vsanthanam\/Reachability.git"},{"type":"text","text":" and select your release and of choice."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Other distribution mechanisms like CocoaPods or Carthage may be added in the future."}]},{"anchor":"Usage","level":2,"type":"heading","text":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic usage of Reachability is the same regardless of your observability mechanism. Initialize an instance of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Reachability\/documentation\/Reachability\/ReachabilityMonitor"},{"type":"text","text":" and retain it in memory. From there, you can observe changes using one of the mechanisms described below."}]},{"anchor":"Synchronously","level":3,"type":"heading","text":"Synchronously"},{"type":"codeListing","syntax":"swift","code":["import Reachability","","final class MyObject {","","    func checkReachability() {","        do {","            let monitor = try ReachabilityMonitor()","            let status = try monitor.currentStatus","            switch status {","                \/\/ do something","            }","        } catch {","            \/\/ handle error","        }","    }","}"]},{"anchor":"Asynchronously","level":3,"type":"heading","text":"Asynchronously"},{"type":"codeListing","syntax":"swift","code":["import Reachability","","final class MyObject {","","    func startObserving() {","        reachabilityTask = observeReachability()","    }","    ","    func stopObserving() {","        reachabilityTask?.cancel()","        reachabilityTask = nil","    }","","    var reachabilityTask: Task<Void, Error>?","","    func observeReachability() -> Task<Void, Error> {","        Task {","            do {","                let monitor = try ReachabilityMonitor()","                for try await status in monitor.status {","                    switch status {","                        \/\/ do something","                    }","                }","            } catch {","                \/\/ handle error","            }","        }","    }","}",""]},{"anchor":"Closures","level":3,"type":"heading","text":"Closures"},{"type":"codeListing","syntax":"swift","code":["import Reachability","","final class MyObject {","    ","    var monitor: ReachabilityMonitor?","    ","    func startObserving() throws {","        monitor = try ReachabilityMonitor() { result in","            do {","                let status = try result.get()","                switch status {","                    \/\/ do something","                }","            } catch {","                \/\/ handle error","            }","        }","    }","    ","    func stopObserving() {","        monitor = nil","    }","}"]},{"anchor":"Delegation","level":3,"type":"heading","text":"Delegation"},{"type":"codeListing","syntax":"swift","code":["import Reachability","","final class MyObject: ReachabilityMonitorDelegate {","","    var monitor: ReachabilityMonitor?","    ","    func startObserving() throws {","        monitor = try ReachabilityMonitor(delegate: self)","    }","    ","    func stopObserving() {","        monitor = nil","    }","    ","    func monitor(_ monitor: ReachabilityMonitor, didUpdateStatus status: ReachabilityStatus) {","        switch status {","            \/\/ do something","        }","    }","    ","    func monitor(_ monitor: ReachabilityMonitor, didFailWithError error: Error) {","        \/\/ handle error","    }","}"]},{"anchor":"Combine","level":3,"type":"heading","text":"Combine"},{"type":"codeListing","syntax":"swift","code":["import Combine","import Reachability","","final class MyObject {","","    var monitor: ReachabilityMonitor?","    var cancellable: AnyCancellable?","    ","    func startObserving() throws {","        monitor = try ReachabilityMonitor()","        cancellable = monitor?.statusPublisher","            .sink { completion in","                    \/\/ handle completion","                } receiveValue: { status in ","                    switch status {","                        \/\/ do something","                    }","                }","    }","    ","    func stopObserving() {","        cancellable?.stop()","        cancellable = nil","        monitor = nil","    }","}"]},{"anchor":"NotificationCenter","level":3,"type":"heading","text":"NotificationCenter"},{"type":"codeListing","syntax":"swift","code":["import ReachabilityMonitor","","final class MyObject {","","    var monitor: ReachabilityMonitor?","    var cancellable: AnyCancellable?","    ","    func startObserving() throws {","        monitor = try ReachabilityMonitor(delegate: self)","        NotificationCenter.default.addObserver(self, selector: #selector(handleChange:), name: .reachabilityStatusChanged)","    }","    ","    func stopObserving() {","        NotificationCenter.default.removeObserver(self, name: .reachabilityStatusChanged)","    }","    ","    @objc","    func handleChange(_ notification: Notification) {","        guard let monitor = notification.object as? ReachabilityMonitor else { return }","        do {","            let status = try monitor.currentStatus","            switch status {","                \/\/ do something","            }","        } catch {","            \/\/ handle error","        }","    }","}"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/reachability"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Reachability\/documentation\/Reachability","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A Swift replacement for SCNetworkReachability with support for structured concurrency."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Reachability","title":"Reachability","symbolKind":"module","role":"collection","modules":[{"name":"Reachability"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Reachability\/documentation\/Reachability\/ReachabilityMonitor"]},{"title":"Protocols","identifiers":["doc:\/\/Reachability\/documentation\/Reachability\/ReachabilityMonitorDelegate"]},{"title":"Enumerations","identifiers":["doc:\/\/Reachability\/documentation\/Reachability\/ReachabilityError","doc:\/\/Reachability\/documentation\/Reachability\/ReachabilityStatus"]}],"references":{"https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html":{"title":"Swift Structured Concurrency","titleInlineContent":[{"type":"text","text":"Swift Structured Concurrency"}],"type":"link","identifier":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html","url":"https:\/\/docs.swift.org\/swift-book\/LanguageGuide\/Concurrency.html"},"https://developer.apple.com/documentation/systemconfiguration":{"title":"SystemConfiguration","titleInlineContent":[{"type":"text","text":"SystemConfiguration"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/systemconfiguration","url":"https:\/\/developer.apple.com\/documentation\/systemconfiguration"},"https://www.swift.org/package-manager/":{"title":"Swift Package Manager","titleInlineContent":[{"type":"text","text":"Swift Package Manager"}],"type":"link","identifier":"https:\/\/www.swift.org\/package-manager\/","url":"https:\/\/www.swift.org\/package-manager\/"},"doc://Reachability/documentation/Reachability/ReachabilityMonitorDelegate":{"role":"symbol","title":"ReachabilityMonitorDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReachabilityMonitorDelegate"}],"abstract":[{"type":"text","text":"A protocol used to observe reachability status changes from a "},{"type":"codeVoice","code":"ReachabilityMonitor"}],"identifier":"doc:\/\/Reachability\/documentation\/Reachability\/ReachabilityMonitorDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReachabilityMonitorDelegate"}],"url":"\/documentation\/reachability\/reachabilitymonitordelegate"},"doc://Reachability/documentation/Reachability/ReachabilityMonitor":{"role":"symbol","title":"ReachabilityMonitor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReachabilityMonitor"}],"abstract":[{"type":"text","text":"A class used to observe network reachability."}],"identifier":"doc:\/\/Reachability\/documentation\/Reachability\/ReachabilityMonitor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReachabilityMonitor"}],"url":"\/documentation\/reachability\/reachabilitymonitor"},"doc://Reachability/documentation/Reachability/ReachabilityError":{"role":"symbol","title":"ReachabilityError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReachabilityError"}],"abstract":[{"type":"text","text":"Errors that could cause a "},{"type":"codeVoice","code":"ReachabiltiyMonitor"},{"type":"text","text":" to fail"}],"identifier":"doc:\/\/Reachability\/documentation\/Reachability\/ReachabilityError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReachabilityError"}],"url":"\/documentation\/reachability\/reachabilityerror"},"doc://Reachability/documentation/Reachability":{"role":"collection","title":"Reachability","abstract":[{"type":"text","text":"A Swift replacement for SCNetworkReachability with support for structured concurrency."}],"identifier":"doc:\/\/Reachability\/documentation\/Reachability","kind":"symbol","type":"topic","url":"\/documentation\/reachability"},"https://developer.apple.com/documentation/systemconfiguration/scnetworkreachability?language=swift":{"title":"Network Reachability APIs","titleInlineContent":[{"type":"text","text":"Network Reachability APIs"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/systemconfiguration\/scnetworkreachability?language=swift","url":"https:\/\/developer.apple.com\/documentation\/systemconfiguration\/scnetworkreachability?language=swift"},"doc://Reachability/documentation/Reachability/ReachabilityStatus":{"role":"symbol","title":"ReachabilityStatus","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReachabilityStatus"}],"abstract":[{"type":"text","text":"The available network reachability status"}],"identifier":"doc:\/\/Reachability\/documentation\/Reachability\/ReachabilityStatus","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReachabilityStatus"}],"url":"\/documentation\/reachability\/reachabilitystatus"},"https://developer.apple.com/documentation/combine":{"title":"Combine","titleInlineContent":[{"type":"text","text":"Combine"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/combine","url":"https:\/\/developer.apple.com\/documentation\/combine"},"https://developer.apple.com/documentation/foundation/notificationcenter":{"title":"NotificationCenter","titleInlineContent":[{"type":"text","text":"NotificationCenter"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/notificationcenter","url":"https:\/\/developer.apple.com\/documentation\/foundation\/notificationcenter"}}}